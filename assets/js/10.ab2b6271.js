(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{409:function(t,s,a){"use strict";a.r(s);var e=a(56),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-笔记"}},[t._v("#")]),t._v(" git 笔记")]),t._v(" "),a("p",[t._v("git init——初始化仓库")]),t._v(" "),a("p",[t._v("git status——查看仓库的状态")]),t._v(" "),a("p",[t._v("git add——向暂存区中添加文件 (如何清空暂存区呢)")]),t._v(" "),a("p",[t._v("git commit——保存仓库的历史记录")]),t._v(" "),a("p",[t._v("git commit -am --改动文件而没有新建文件的时候合并提交")]),t._v(" "),a("p",[t._v("git commit --amend——修改提交信息")]),t._v(" "),a("p",[t._v("git log——查看提交日志")]),t._v(" "),a("p",[t._v("git log --graph——以图表形式查看分支")]),t._v(" "),a("p",[t._v("git reflog命令，查看当前仓库的操作日志")]),t._v(" "),a("p",[t._v("git diff——查看更改前后的差别")]),t._v(" "),a("p",[t._v("git branch——显示分支一览表")]),t._v(" "),a("p",[t._v("git checkout -b——创建、切换分支")]),t._v(" "),a("p",[t._v("git checkout - 切换回上一个分支")]),t._v(" "),a("p",[t._v("git merge——合并分支")]),t._v(" "),a("p",[t._v("git reset——回溯历史版本")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git rest --hard hash\n")])])]),a("p",[t._v("git rebase -i HEAD~n ——压缩历史  (多个commit压缩成一个)pick -> fixup")]),t._v(" "),a("p",[t._v("git remote add——添加远程仓库")]),t._v(" "),a("p",[t._v("git push——推送至远程仓库")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push -u origin master\n")])])]),a("p",[t._v("git pull")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git pull origin dev\n")])])]),a("h3",{attrs:{id:"notes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notes"}},[t._v("#")]),t._v(" notes:")]),t._v(" "),a("p",[t._v("Pro Git")]),t._v(" "),a("p",[t._v("LearnGitBranching")]),t._v(" "),a("p",[t._v("tryGit")]),t._v(" "),a("h3",{attrs:{id:"tricks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tricks"}},[t._v("#")]),t._v(" tricks:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git checkout -b branch-name origin/branch-name\n")])])]),a("h3",{attrs:{id:"新建git仓库的命令说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新建git仓库的命令说明"}},[t._v("#")]),t._v(" 新建git仓库的命令说明")]),t._v(" "),a("h5",{attrs:{id:"git-global-setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-global-setup"}},[t._v("#")]),t._v(" Git global setup")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email your-email\n")])])]),a("p",[t._v("在Git中，用"),a("code",[t._v("HEAD")]),t._v("表示当前版本，也就是最新的提交"),a("code",[t._v("1094adb...")]),t._v("，上一个版本就是"),a("code",[t._v("HEAD^")]),t._v("，上上一个版本就是"),a("code",[t._v("HEAD^^")]),t._v("，当然往上100个版本写100个"),a("code",[t._v("^")]),t._v("比较容易数不过来，所以写成"),a("code",[t._v("HEAD~100")])]),t._v(" "),a("p",[a("code",[t._v("git reset --hard HEAD^")]),t._v("  \t回退到上次提交")]),t._v(" "),a("p",[a("code",[t._v("git reset --hard HEAD^^")]),t._v(" \t回退到上上次提交")]),t._v(" "),a("p",[a("code",[t._v("git reset --hard HEAD~n")]),t._v(" \t回退到上n次提交")]),t._v(" "),a("p",[a("code",[t._v("git reset --hard commit_id")]),t._v("\t回退到指定id")]),t._v(" "),a("p",[a("code",[t._v("git reflog")]),t._v(" 用来记录每一次命令")]),t._v(" "),a("p",[a("code",[t._v("git diff HEAD -- filename")]),t._v(" 查看工作区和版本库里面最新版本的区别")]),t._v(" "),a("p",[t._v("撤销操作：")]),t._v(" "),a("p",[t._v("工作区： "),a("code",[t._v("git checkout -- filename")]),t._v("  撤销工作区")]),t._v(" "),a("p",[t._v("暂存区："),a("code",[t._v("git reset HEAD <file>")]),t._v("  撤销暂存区,重新放回工作区")]),t._v(" "),a("p",[t._v("已经commit的时候使用reset")]),t._v(" "),a("p",[t._v("删除操作：")]),t._v(" "),a("p",[t._v("暂存区删除： "),a("code",[t._v("git rm")])]),t._v(" "),a("p",[t._v("误删除恢复：git checkout -- file （等于撤销工作区的操作）")]),t._v(" "),a("p",[a("code",[t._v("git stash")]),t._v(" "),a("code",[t._v("git stash list")])]),t._v(" "),a("p",[a("code",[t._v("git stash apply")]),t._v("不删除stash，需要使用"),a("code",[t._v("git stash drop")]),t._v(" （"),a("code",[t._v("git stash apply stash@{0}")]),t._v("）")]),t._v(" "),a("p",[a("code",[t._v("git stash pop")]),t._v("\t恢复的同时删除删除stash")]),t._v(" "),a("p",[a("code",[t._v("git cherry-pick")]),t._v("命令，把bug提交的修改“复制”到当前分支，避免重复劳动")]),t._v(" "),a("h5",{attrs:{id:"create-a-new-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-new-repository"}},[t._v("#")]),t._v(" Create a new repository")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@xxxx.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" README.md\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" README.md\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add README"')]),t._v("\n")])])]),a("h5",{attrs:{id:"push-an-existing-folder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-an-existing-folder"}},[t._v("#")]),t._v(" Push an existing folder")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" existing_folder\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关联远程仓库命名为origin， 可以使用git remote rm origin删除")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@xxxx.git\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Initial commit"')]),t._v("\n")])])]),a("h5",{attrs:{id:"push-an-existing-git-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-an-existing-git-repository"}},[t._v("#")]),t._v(" Push an existing Git repository")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" existing_repo\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git仓库迁移")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rename")]),t._v(" origin old-origin\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@xxxx.git\n")])])]),a("hr"),t._v(" "),a("p",[a("code",[t._v("git remote -v")]),t._v("  查看关联远程仓库")]),t._v(" "),a("p",[t._v("git push -u origin master  默认把mater分支提交到origin远程，之后只要git push就行了")]),t._v(" "),a("p",[t._v("Github和gitee双向同步")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git remote set-url --add origin git@xxxx.git\n")])])]),a("p",[t._v("git push 就会同时同步github和gitee了，如果分别拉取和推送的话同"),a("strong",[t._v("Push an existing Git repository")])]),t._v(" "),a("h2",{attrs:{id:"git-如何管理远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-如何管理远程仓库"}},[t._v("#")]),t._v(" git 如何管理远程仓库")]),t._v(" "),a("p",[t._v("https://docs.github.com/cn/free-pro-team@latest/github/using-git/managing-remote-repositories")]),t._v(" "),a("p",[t._v("远程仓库有https协议和ssh 协议的两种，一般的来说，一个本地仓库对应一个远程仓库，当然也有对应多个的时候，比如说git仓库迁移又不想丢失原来的commit信息，这个时候就可以对应原来的远程分支（origin）和新的远程（new）")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/user/repo.git\ngit@github.com:user/repo.git\n")])])]),a("p",[t._v("有关这些 URL 之间差异的信息，请参阅“"),a("a",{attrs:{href:"https://docs.github.com/cn/free-pro-team@latest/articles/which-remote-url-should-i-use",target:"_blank",rel:"noopener noreferrer"}},[t._v("我应使用哪种远程 URL？"),a("OutboundLink")],1),t._v("”")]),t._v(" "),a("h3",{attrs:{id:"创建远程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建远程"}},[t._v("#")]),t._v(" 创建远程")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("git remote add")]),t._v(" 命令将远程 URL 与名称匹配。 例如，在命令行中输入以下命令：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("REMOTE_URL"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])]),a("p",[t._v("这会将名称 "),a("code",[t._v("origin")]),t._v(" 与 "),a("code",[t._v("REMOTE_URL")]),t._v(" 关联。")]),t._v(" "),a("p",[t._v("您可以使用命令 "),a("code",[t._v("git remote set-url")]),t._v(" 来"),a("a",{attrs:{href:"https://docs.github.com/cn/free-pro-team@latest/articles/changing-a-remote-s-url",target:"_blank",rel:"noopener noreferrer"}},[t._v("更改远程 URL"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"添加远程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加远程"}},[t._v("#")]),t._v(" 添加远程")]),t._v(" "),a("p",[a("code",[t._v("git remote add")]),t._v(" 命令使用两个参数：")]),t._v(" "),a("ul",[a("li",[t._v("远程命令，如 "),a("code",[t._v("origin")])]),t._v(" "),a("li",[t._v("远程 URL，如 "),a("code",[t._v("https://github.com/user/repo.git")])])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin https://github.com/user/repo.git\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set a new remote")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Verify new remote")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" origin  https://github.com/user/repo.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" origin  https://github.com/user/repo.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"更改远程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更改远程"}},[t._v("#")]),t._v(" 更改远程")]),t._v(" "),a("p",[a("code",[t._v("git remote set-url")]),t._v(" 命令可更改现有远程仓库的 URL。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url origin git@github.com:USERNAME/REPOSITORY.git\n")])])]),a("h3",{attrs:{id:"重命名远程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重命名远程"}},[t._v("#")]),t._v(" 重命名远程")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("git remote rename")]),t._v(" 命令可重命名现有的远程。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看现有远程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" origin  https://github.com/OWNER/REPOSITORY.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" origin  https://github.com/OWNER/REPOSITORY.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rename")]),t._v(" origin destination\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将远程名称从 'origin' 更改为 'destination'")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 验证远程的新名称")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" destination  https://github.com/OWNER/REPOSITORY.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" destination  https://github.com/OWNER/REPOSITORY.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"删除远程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除远程"}},[t._v("#")]),t._v(" 删除远程")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("git remote rm")]),t._v(" 命令可从仓库中删除远程 URL。")]),t._v(" "),a("p",[a("code",[t._v("git remote rm")]),t._v(" 命令使用一个参数：")]),t._v(" "),a("ul",[a("li",[t._v("远程名称，例如 "),a("code",[t._v("destination")])])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前远程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" origin  https://github.com/OWNER/REPOSITORY.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" origin  https://github.com/OWNER/REPOSITORY.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" destination  https://github.com/FORKER/REPOSITORY.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" destination  https://github.com/FORKER/REPOSITORY.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" destination\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 验证其已删除")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" origin  https://github.com/OWNER/REPOSITORY.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" origin  https://github.com/OWNER/REPOSITORY.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("git remote rm")]),t._v(" 不会从服务器中删除远程仓库。 它只是从本地仓库中删除远程及其引用。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);